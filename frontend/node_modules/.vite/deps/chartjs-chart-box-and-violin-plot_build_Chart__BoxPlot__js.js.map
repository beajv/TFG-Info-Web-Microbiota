{
  "version": 3,
  "sources": ["../../chartjs-chart-box-and-violin-plot/build/Chart.BoxPlot.js"],
  "sourcesContent": ["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('chart.js')) :\n  typeof define === 'function' && define.amd ? define(['exports', 'chart.js'], factory) :\n  (global = global || self, factory(global.ChartBoxPlot = {}, global.Chart));\n}(this, (function (exports, Chart) { 'use strict';\n\n  function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n      var symbols = Object.getOwnPropertySymbols(object);\n\n      if (enumerableOnly) {\n        symbols = symbols.filter(function (sym) {\n          return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n      }\n\n      keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n  }\n\n  function _objectSpread2(target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i] != null ? arguments[i] : {};\n\n      if (i % 2) {\n        ownKeys(Object(source), true).forEach(function (key) {\n          _defineProperty(target, key, source[key]);\n        });\n      } else if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n      } else {\n        ownKeys(Object(source)).forEach(function (key) {\n          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n      }\n    }\n\n    return target;\n  }\n\n  function _defineProperty(obj, key, value) {\n    if (key in obj) {\n      Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n\n    return obj;\n  }\n\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n  }\n\n  function _arrayWithHoles(arr) {\n    if (Array.isArray(arr)) return arr;\n  }\n\n  function _iterableToArrayLimit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n\n    var _s, _e;\n\n    try {\n      for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  // See <http://en.wikipedia.org/wiki/Kernel_(statistics)>.\n  function gaussian(u) {\n    return 1 / Math.sqrt(2 * Math.PI) * Math.exp(-.5 * u * u);\n  }\n\n  // Welford's algorithm.\n  function mean(x) {\n    var n = x.length;\n    if (n === 0) return NaN;\n    var m = 0,\n        i = -1;\n\n    while (++i < n) {\n      m += (x[i] - m) / (i + 1);\n    }\n\n    return m;\n  }\n\n  // Also known as the sample variance, where the denominator is n - 1.\n\n  function variance(x) {\n    var n = x.length;\n    if (n < 1) return NaN;\n    if (n === 1) return 0;\n    var mean$1 = mean(x),\n        i = -1,\n        s = 0;\n\n    while (++i < n) {\n      var v = x[i] - mean$1;\n      s += v * v;\n    }\n\n    return s / (n - 1);\n  }\n\n  function ascending(a, b) {\n    return a - b;\n  }\n\n  function quantiles(d, quantiles) {\n    d = d.slice().sort(ascending);\n    var n_1 = d.length - 1;\n    return quantiles.map(function (q) {\n      if (q === 0) return d[0];else if (q === 1) return d[n_1];\n      var index = 1 + q * n_1,\n          lo = Math.floor(index),\n          h = index - lo,\n          a = d[lo - 1];\n      return h === 0 ? a : a + h * (d[lo] - a);\n    });\n  }\n\n  function iqr(x) {\n    var quartiles = quantiles(x, [.25, .75]);\n    return quartiles[1] - quartiles[0];\n  }\n\n  // Visualization. Wiley.\n\n  function nrd(x) {\n    var h = iqr(x) / 1.34;\n    return 1.06 * Math.min(Math.sqrt(variance(x)), h) * Math.pow(x.length, -1 / 5);\n  }\n\n  function functor(v) {\n    return typeof v === \"function\" ? v : function () {\n      return v;\n    };\n  }\n\n  function kde() {\n    var kernel = gaussian,\n        sample = [],\n        bandwidth = nrd;\n\n    function kde(points, i) {\n      var bw = bandwidth.call(this, sample);\n      return points.map(function (x) {\n        var i = -1,\n            y = 0,\n            n = sample.length;\n\n        while (++i < n) {\n          y += kernel((x - sample[i]) / bw);\n        }\n\n        return [x, y / bw / n];\n      });\n    }\n\n    kde.kernel = function (x) {\n      if (!arguments.length) return kernel;\n      kernel = x;\n      return kde;\n    };\n\n    kde.sample = function (x) {\n      if (!arguments.length) return sample;\n      sample = x;\n      return kde;\n    };\n\n    kde.bandwidth = function (x) {\n      if (!arguments.length) return bandwidth;\n      bandwidth = functor(x);\n      return kde;\n    };\n\n    return kde;\n  }\n\n  // https://en.wikipedia.org/wiki/Quantile#Quantiles_of_a_population\n\n  function quantilesType7(arr) {\n    var n1 = arr.length - 1;\n\n    var compute = function compute(q) {\n      var index = 1 + q * n1;\n      var lo = Math.floor(index);\n      var h = index - lo;\n      var a = arr[lo - 1];\n      return h === 0 ? a : a + h * (arr[lo] - a);\n    };\n\n    return {\n      min: arr[0],\n      q1: compute(0.25),\n      median: compute(0.5),\n      q3: compute(0.75),\n      max: arr[n1]\n    };\n  }\n  /**\n   * The hinges equal the quartiles for odd n (where n <- length(x))\n   * and differ for even n. Whereas the quartiles only equal observations\n   * for n %% 4 == 1 (n = 1 mod 4), the hinges do so additionally\n   * for n %% 4 == 2 (n = 2 mod 4), and are in the middle of\n   * two observations otherwise.\n   * @param {number[]} arr sorted array\n   */\n\n  function fivenum(arr) {\n    // based on R fivenum\n    var n = arr.length; // assuming R 1 index system, so arr[1] is the first element\n\n    var n4 = Math.floor((n + 3) / 2) / 2;\n\n    var compute = function compute(d) {\n      return 0.5 * (arr[Math.floor(d) - 1] + arr[Math.ceil(d) - 1]);\n    };\n\n    return {\n      min: arr[0],\n      q1: compute(n4),\n      median: compute((n + 1) / 2),\n      q3: compute(n + 1 - n4),\n      max: arr[n - 1]\n    };\n  }\n  /**\n   * compute the whiskers\n   * @param boxplot\n   * @param {number[]} arr sorted array\n   * @param {number} coef\n   */\n\n  function whiskers(boxplot, arr) {\n    var coef = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1.5;\n    var iqr = boxplot.q3 - boxplot.q1; // since top left is max\n\n    var coefValid = typeof coef === 'number' && coef > 0;\n    var whiskerMin = coefValid ? Math.max(boxplot.min, boxplot.q1 - coef * iqr) : boxplot.min;\n    var whiskerMax = coefValid ? Math.min(boxplot.max, boxplot.q3 + coef * iqr) : boxplot.max;\n\n    if (Array.isArray(arr)) {\n      // compute the closest real element\n      for (var i = 0; i < arr.length; i++) {\n        var v = arr[i];\n\n        if (v >= whiskerMin) {\n          whiskerMin = v;\n          break;\n        }\n      }\n\n      for (var _i = arr.length - 1; _i >= 0; _i--) {\n        var _v = arr[_i];\n\n        if (_v <= whiskerMax) {\n          whiskerMax = _v;\n          break;\n        }\n      }\n    }\n\n    return {\n      whiskerMin: whiskerMin,\n      whiskerMax: whiskerMax\n    };\n  }\n  var defaultStatsOptions = {\n    coef: 1.5,\n    quantiles: 7\n  };\n\n  function determineStatsOptions(options) {\n    var coef = options == null || typeof options.coef !== 'number' ? defaultStatsOptions.coef : options.coef;\n    var q = options == null ? null : options.quantiles;\n    var quantiles = typeof q === 'function' ? q : q === 'hinges' || q === 'fivenum' ? fivenum : quantilesType7;\n    return {\n      coef: coef,\n      quantiles: quantiles\n    };\n  }\n\n  function boxplotStats(arr, options) {\n    // console.assert(Array.isArray(arr));\n    if (arr.length === 0) {\n      return {\n        min: NaN,\n        max: NaN,\n        median: NaN,\n        q1: NaN,\n        q3: NaN,\n        whiskerMin: NaN,\n        whiskerMax: NaN,\n        outliers: []\n      };\n    }\n\n    arr = arr.filter(function (v) {\n      return typeof v === 'number' && !isNaN(v);\n    });\n    arr.sort(function (a, b) {\n      return a - b;\n    });\n\n    var _determineStatsOption = determineStatsOptions(options),\n        quantiles = _determineStatsOption.quantiles,\n        coef = _determineStatsOption.coef;\n\n    var stats = quantiles(arr);\n\n    var _whiskers = whiskers(stats, arr, coef),\n        whiskerMin = _whiskers.whiskerMin,\n        whiskerMax = _whiskers.whiskerMax;\n\n    stats.outliers = arr.filter(function (v) {\n      return v < whiskerMin || v > whiskerMax;\n    });\n    stats.whiskerMin = whiskerMin;\n    stats.whiskerMax = whiskerMax;\n    return stats;\n  }\n  function violinStats(arr, options) {\n    // console.assert(Array.isArray(arr));\n    if (arr.length === 0) {\n      return {};\n    }\n\n    arr = arr.filter(function (v) {\n      return typeof v === 'number' && !isNaN(v);\n    });\n    arr.sort(function (a, b) {\n      return a - b;\n    });\n\n    var _determineStatsOption2 = determineStatsOptions(options),\n        quantiles = _determineStatsOption2.quantiles;\n\n    var stats = quantiles(arr);\n    stats.kde = kde().sample(arr);\n    return stats;\n  }\n  function asBoxPlotStats(value, options) {\n    if (!value) {\n      return null;\n    }\n\n    if (typeof value.median === 'number' && typeof value.q1 === 'number' && typeof value.q3 === 'number') {\n      // sounds good, check for helper\n      if (typeof value.whiskerMin === 'undefined') {\n        var _determineStatsOption3 = determineStatsOptions(options),\n            coef = _determineStatsOption3.coef;\n\n        var _whiskers2 = whiskers(value, Array.isArray(value.items) ? value.items.slice().sort(function (a, b) {\n          return a - b;\n        }) : null, coef),\n            whiskerMin = _whiskers2.whiskerMin,\n            whiskerMax = _whiskers2.whiskerMax;\n\n        value.whiskerMin = whiskerMin;\n        value.whiskerMax = whiskerMax;\n      }\n\n      return value;\n    }\n\n    if (!Array.isArray(value)) {\n      return undefined;\n    }\n\n    if (value.__stats === undefined) {\n      value.__stats = boxplotStats(value, options);\n    }\n\n    return value.__stats;\n  }\n  function asViolinStats(value, options) {\n    if (!value) {\n      return null;\n    }\n\n    if (typeof value.median === 'number' && (typeof value.kde === 'function' || Array.isArray(value.coords))) {\n      return value;\n    }\n\n    if (!Array.isArray(value)) {\n      return undefined;\n    }\n\n    if (value.__kde === undefined) {\n      value.__kde = violinStats(value, options);\n    }\n\n    return value.__kde;\n  }\n  function asValueStats(value, minStats, maxStats, options) {\n    if (typeof value[minStats] === 'number' && typeof value[maxStats] === 'number') {\n      return value;\n    }\n\n    if (!Array.isArray(value) || value.length === 0) {\n      return undefined;\n    }\n\n    return asBoxPlotStats(value, options);\n  }\n  function getRightValue(rawValue, options) {\n    if (!rawValue) {\n      return rawValue;\n    }\n\n    if (typeof rawValue === 'number' || typeof rawValue === 'string') {\n      return Number(rawValue);\n    }\n\n    var b = asBoxPlotStats(rawValue, options);\n    return b ? b.median : rawValue;\n  }\n  var commonScaleOptions = {\n    ticks: _objectSpread2({\n      minStats: 'min',\n      maxStats: 'max'\n    }, defaultStatsOptions)\n  };\n  function commonDataLimits(extraCallback) {\n    var _this = this;\n\n    var chart = this.chart;\n    var isHorizontal = this.isHorizontal();\n    var _this$options$ticks = this.options.ticks,\n        minStats = _this$options$ticks.minStats,\n        maxStats = _this$options$ticks.maxStats;\n\n    var matchID = function matchID(meta) {\n      return isHorizontal ? meta.xAxisID === _this.id : meta.yAxisID === _this.id;\n    }; // First Calculate the range\n\n\n    this.min = null;\n    this.max = null; // Regular charts use x, y values\n    // For the boxplot chart we have rawValue.min and rawValue.max for each point\n\n    chart.data.datasets.forEach(function (d, i) {\n      var meta = chart.getDatasetMeta(i);\n\n      if (!chart.isDatasetVisible(i) || !matchID(meta)) {\n        return;\n      }\n\n      d.data.forEach(function (value, j) {\n        if (value == null || meta.data[j].hidden) {\n          return;\n        }\n\n        var stats = asValueStats(value, minStats, maxStats, _this.options.ticks);\n        var minValue;\n        var maxValue;\n\n        if (stats) {\n          minValue = stats[minStats];\n          maxValue = stats[maxStats];\n        } else {\n          // if stats are not available use the plain value\n          var parsed = +_this.getRightValue(value);\n\n          if (isNaN(parsed)) {\n            return;\n          }\n\n          minValue = maxValue = parsed;\n        }\n\n        if (_this.min === null || minValue < _this.min) {\n          _this.min = minValue;\n        }\n\n        if (_this.max === null || maxValue > _this.max) {\n          _this.max = maxValue;\n        }\n\n        if (extraCallback) {\n          extraCallback(stats);\n        }\n      });\n    });\n  }\n  function rnd(seed) {\n    // Adapted from http://indiegamr.com/generate-repeatable-random-numbers-in-js/\n    if (seed === undefined) {\n      seed = Date.now();\n    }\n\n    return function () {\n      seed = (seed * 9301 + 49297) % 233280;\n      return seed / 233280;\n    };\n  }\n\n  var defaults = _objectSpread2(_objectSpread2({}, Chart.defaults.global.elements.rectangle), {}, {\n    borderWidth: 1,\n    outlierRadius: 2,\n    outlierColor: Chart.defaults.global.elements.rectangle.backgroundColor,\n    lowerColor: Chart.defaults.global.elements.rectangle.lowerColor,\n    medianColor: null,\n    itemRadius: 0,\n    itemStyle: 'circle',\n    itemBackgroundColor: Chart.defaults.global.elements.rectangle.backgroundColor,\n    itemBorderColor: Chart.defaults.global.elements.rectangle.borderColor,\n    hitPadding: 2,\n    outlierHitRadius: 4,\n    tooltipDecimals: 2\n  });\n  var ArrayElementBase = Chart.Element.extend({\n    isVertical: function isVertical() {\n      return this._view.width !== undefined;\n    },\n    draw: function draw() {// abstract\n    },\n    _drawItems: function _drawItems(vm, container, ctx, vert) {\n      if (vm.itemRadius <= 0 || !container.items || container.items.length <= 0) {\n        return;\n      }\n\n      ctx.save();\n      ctx.strokeStyle = vm.itemBorderColor;\n      ctx.fillStyle = vm.itemBackgroundColor; // jitter based on random data\n      // use the datesetindex and index to initialize the random number generator\n\n      var random = rnd(this._datasetIndex * 1000 + this._index);\n\n      if (vert) {\n        container.items.forEach(function (v) {\n          Chart.canvasHelpers.drawPoint(ctx, vm.itemStyle, vm.itemRadius, vm.x - vm.width / 2 + random() * vm.width, v);\n        });\n      } else {\n        container.items.forEach(function (v) {\n          Chart.canvasHelpers.drawPoint(ctx, vm.itemStyle, vm.itemRadius, v, vm.y - vm.height / 2 + random() * vm.height);\n        });\n      }\n\n      ctx.restore();\n    },\n    _drawOutliers: function _drawOutliers(vm, container, ctx, vert) {\n      if (vm.outlierRadius <= 0 || !container.outliers || container.outliers.length === 0) {\n        return;\n      }\n\n      ctx.fillStyle = vm.outlierColor;\n      ctx.beginPath();\n\n      if (vert) {\n        container.outliers.forEach(function (v) {\n          ctx.arc(vm.x, v, vm.outlierRadius, 0, Math.PI * 2);\n        });\n      } else {\n        container.outliers.forEach(function (v) {\n          ctx.arc(v, vm.y, vm.outlierRadius, 0, Math.PI * 2);\n        });\n      }\n\n      ctx.fill();\n      ctx.closePath();\n    },\n    _getBounds: function _getBounds() {\n      // abstract\n      return {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      };\n    },\n    _getHitBounds: function _getHitBounds() {\n      var padding = this._view.hitPadding;\n\n      var b = this._getBounds();\n\n      return {\n        left: b.left - padding,\n        top: b.top - padding,\n        right: b.right + padding,\n        bottom: b.bottom + padding\n      };\n    },\n    height: function height() {\n      return 0; // abstract\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      if (!this._view) {\n        return false;\n      }\n\n      return this._boxInRange(mouseX, mouseY) || this._outlierIndexInRange(mouseX, mouseY) >= 0;\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      if (!this._view) {\n        return false;\n      }\n\n      var bounds = this._getHitBounds();\n\n      if (this.isVertical()) {\n        return mouseX >= bounds.left && mouseX <= bounds.right;\n      }\n\n      return mouseY >= bounds.top && mouseY <= bounds.bottom;\n    },\n    inXRange: function inXRange(mouseX) {\n      var bounds = this._getHitBounds();\n\n      return mouseX >= bounds.left && mouseX <= bounds.right;\n    },\n    inYRange: function inYRange(mouseY) {\n      var bounds = this._getHitBounds();\n\n      return mouseY >= bounds.top && mouseY <= bounds.bottom;\n    },\n    _outlierIndexInRange: function _outlierIndexInRange(mouseX, mouseY) {\n      var vm = this._view;\n      var hitRadius = vm.outlierHitRadius;\n\n      var outliers = this._getOutliers();\n\n      var vertical = this.isVertical(); // check if along the outlier line\n\n      if (vertical && Math.abs(mouseX - vm.x) > hitRadius || !vertical && Math.abs(mouseY - vm.y) > hitRadius) {\n        return -1;\n      }\n\n      var toCompare = vertical ? mouseY : mouseX;\n\n      for (var i = 0; i < outliers.length; i++) {\n        if (Math.abs(outliers[i] - toCompare) <= hitRadius) {\n          return i;\n        }\n      }\n\n      return -1;\n    },\n    _boxInRange: function _boxInRange(mouseX, mouseY) {\n      var bounds = this._getHitBounds();\n\n      return mouseX >= bounds.left && mouseX <= bounds.right && mouseY >= bounds.top && mouseY <= bounds.bottom;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var _this$_view = this._view,\n          x = _this$_view.x,\n          y = _this$_view.y;\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      return 0; // abstract\n    },\n    _getOutliers: function _getOutliers() {\n      return []; // abstract\n    },\n    tooltipPosition: function tooltipPosition(eventPosition, tooltip) {\n      if (!eventPosition) {\n        // fallback\n        return this.getCenterPoint();\n      }\n\n      delete tooltip._tooltipOutlier;\n      var vm = this._view;\n\n      var index = this._outlierIndexInRange(eventPosition.x, eventPosition.y);\n\n      if (index < 0) {\n        return this.getCenterPoint();\n      }\n\n      tooltip._tooltipOutlier = index;\n\n      if (this.isVertical()) {\n        return {\n          x: vm.x,\n          y: this._getOutliers()[index]\n        };\n      }\n\n      return {\n        x: this._getOutliers()[index],\n        y: vm.y\n      };\n    }\n  });\n\n  Chart.defaults.global.elements.boxandwhiskers = _objectSpread2({}, defaults);\n\n  function transitionBoxPlot(start, view, model, ease) {\n    var keys = Object.keys(model);\n\n    for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n      var key = _keys[_i];\n      var target = model[key];\n      var origin = start[key];\n\n      if (origin === target) {\n        continue;\n      }\n\n      if (typeof target === 'number') {\n        view[key] = origin + (target - origin) * ease;\n        continue;\n      }\n\n      if (Array.isArray(target)) {\n        var v = view[key];\n        var common = Math.min(target.length, origin.length);\n\n        for (var i = 0; i < common; ++i) {\n          v[i] = origin[i] + (target[i] - origin[i]) * ease;\n        }\n      }\n    }\n  }\n\n  var BoxAndWiskers = Chart.elements.BoxAndWhiskers = ArrayElementBase.extend({\n    transition: function transition(ease) {\n      var r = Chart.Element.prototype.transition.call(this, ease);\n      var model = this._model;\n      var start = this._start;\n      var view = this._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        return r;\n      }\n\n      if (start.boxplot == null) {\n        return r; // model === view -> not copied\n      } // create deep copy to avoid alternation\n\n\n      if (model.boxplot === view.boxplot) {\n        view.boxplot = Chart.helpers.clone(view.boxplot);\n      }\n\n      transitionBoxPlot(start.boxplot, view.boxplot, model.boxplot, ease);\n      return r;\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var boxplot = vm.boxplot;\n      var vert = this.isVertical();\n      ctx.save();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n\n      this._drawBoxPlot(vm, boxplot, ctx, vert);\n\n      this._drawOutliers(vm, boxplot, ctx, vert);\n\n      ctx.restore();\n\n      this._drawItems(vm, boxplot, ctx, vert);\n    },\n    _drawBoxPlot: function _drawBoxPlot(vm, boxplot, ctx, vert) {\n      if (vert) {\n        this._drawBoxPlotVert(vm, boxplot, ctx);\n      } else {\n        this._drawBoxPlotHoriz(vm, boxplot, ctx);\n      }\n    },\n    _drawBoxPlotVert: function _drawBoxPlotVert(vm, boxplot, ctx) {\n      var x = vm.x;\n      var width = vm.width;\n      var x0 = x - width / 2; // Draw the q1>q3 box\n\n      if (boxplot.q3 > boxplot.q1) {\n        ctx.fillRect(x0, boxplot.q1, width, boxplot.q3 - boxplot.q1);\n      } else {\n        ctx.fillRect(x0, boxplot.q3, width, boxplot.q1 - boxplot.q3);\n      } // Draw the median line\n\n\n      ctx.save();\n\n      if (vm.medianColor) {\n        ctx.strokeStyle = vm.medianColor;\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(x0, boxplot.median);\n      ctx.lineTo(x0 + width, boxplot.median);\n      ctx.closePath();\n      ctx.stroke(); // Draw the segment line\n\n      if (boxplot.segment != null) {\n        if (vm.segmentColor) {\n          ctx.strokeStyle = vm.segmentColor;\n        }\n\n        ctx.beginPath();\n        ctx.moveTo(x0, boxplot.segment);\n        ctx.lineTo(x0 + width, boxplot.segment);\n        ctx.closePath();\n      } // fill the part below the median with lowerColor\n\n\n      if (vm.lowerColor) {\n        ctx.fillStyle = vm.lowerColor;\n\n        if (boxplot.q3 > boxplot.q1) {\n          ctx.fillRect(x0, boxplot.median, width, boxplot.q3 - boxplot.median);\n        } else {\n          ctx.fillRect(x0, boxplot.median, width, boxplot.q1 - boxplot.median);\n        }\n      }\n\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore(); // Draw the border around the main q1>q3 box\n\n      if (boxplot.q3 > boxplot.q1) {\n        ctx.strokeRect(x0, boxplot.q1, width, boxplot.q3 - boxplot.q1);\n      } else {\n        ctx.strokeRect(x0, boxplot.q3, width, boxplot.q1 - boxplot.q3);\n      } // Draw the whiskers\n\n\n      ctx.beginPath();\n      ctx.moveTo(x0, boxplot.whiskerMin);\n      ctx.lineTo(x0 + width, boxplot.whiskerMin);\n      ctx.moveTo(x, boxplot.whiskerMin);\n      ctx.lineTo(x, boxplot.q1);\n      ctx.moveTo(x0, boxplot.whiskerMax);\n      ctx.lineTo(x0 + width, boxplot.whiskerMax);\n      ctx.moveTo(x, boxplot.whiskerMax);\n      ctx.lineTo(x, boxplot.q3);\n      ctx.closePath();\n      ctx.stroke();\n    },\n    _drawBoxPlotHoriz: function _drawBoxPlotHoriz(vm, boxplot, ctx) {\n      var y = vm.y;\n      var height = vm.height;\n      var y0 = y - height / 2; // Draw the q1>q3 box\n\n      if (boxplot.q3 > boxplot.q1) {\n        ctx.fillRect(boxplot.q1, y0, boxplot.q3 - boxplot.q1, height);\n      } else {\n        ctx.fillRect(boxplot.q3, y0, boxplot.q1 - boxplot.q3, height);\n      } // Draw the median line\n\n\n      ctx.save();\n\n      if (vm.medianColor) {\n        ctx.strokeStyle = vm.medianColor;\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(boxplot.median, y0);\n      ctx.lineTo(boxplot.median, y0 + height);\n      ctx.closePath();\n      ctx.stroke();\n      ctx.restore(); // Draw the border around the main q1>q3 box\n\n      if (boxplot.q3 > boxplot.q1) {\n        ctx.strokeRect(boxplot.q1, y0, boxplot.q3 - boxplot.q1, height);\n      } else {\n        ctx.strokeRect(boxplot.q3, y0, boxplot.q1 - boxplot.q3, height);\n      } // Draw the whiskers\n\n\n      ctx.beginPath();\n      ctx.moveTo(boxplot.whiskerMin, y0);\n      ctx.lineTo(boxplot.whiskerMin, y0 + height);\n      ctx.moveTo(boxplot.whiskerMin, y);\n      ctx.lineTo(boxplot.q1, y);\n      ctx.moveTo(boxplot.whiskerMax, y0);\n      ctx.lineTo(boxplot.whiskerMax, y0 + height);\n      ctx.moveTo(boxplot.whiskerMax, y);\n      ctx.lineTo(boxplot.q3, y);\n      ctx.closePath();\n      ctx.stroke();\n    },\n    _getBounds: function _getBounds() {\n      var vm = this._view;\n      var vert = this.isVertical();\n      var boxplot = vm.boxplot;\n\n      if (!boxplot) {\n        return {\n          left: 0,\n          top: 0,\n          right: 0,\n          bottom: 0\n        };\n      }\n\n      if (vert) {\n        var x = vm.x,\n            width = vm.width;\n        var x0 = x - width / 2;\n        return {\n          left: x0,\n          top: boxplot.whiskerMax,\n          right: x0 + width,\n          bottom: boxplot.whiskerMin\n        };\n      }\n\n      var y = vm.y,\n          height = vm.height;\n      var y0 = y - height / 2;\n      return {\n        left: boxplot.whiskerMin,\n        top: y0,\n        right: boxplot.whiskerMax,\n        bottom: y0 + height\n      };\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - Math.min(vm.boxplot.q1, vm.boxplot.q3);\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      var iqr = Math.abs(vm.boxplot.q3 - vm.boxplot.q1);\n\n      if (this.isVertical()) {\n        return iqr * vm.width;\n      }\n\n      return iqr * vm.height;\n    },\n    _getOutliers: function _getOutliers() {\n      return this._view.boxplot ? this._view.boxplot.outliers || [] : [];\n    }\n  });\n\n  Chart.defaults.global.elements.violin = _objectSpread2({\n    points: 100\n  }, defaults);\n\n  function transitionViolin(start, view, model, ease) {\n    var keys = Object.keys(model);\n\n    for (var _i = 0, _keys = keys; _i < _keys.length; _i++) {\n      var key = _keys[_i];\n      var target = model[key];\n      var origin = start[key];\n\n      if (origin === target) {\n        continue;\n      }\n\n      if (typeof target === 'number') {\n        view[key] = origin + (target - origin) * ease;\n        continue;\n      }\n\n      if (key === 'coords') {\n        var v = view[key];\n        var common = Math.min(target.length, origin.length);\n\n        for (var i = 0; i < common; ++i) {\n          v[i].v = origin[i].v + (target[i].v - origin[i].v) * ease;\n          v[i].estimate = origin[i].estimate + (target[i].estimate - origin[i].estimate) * ease;\n        }\n      }\n    }\n  }\n\n  var Violin = Chart.elements.Violin = ArrayElementBase.extend({\n    transition: function transition(ease) {\n      var r = Chart.Element.prototype.transition.call(this, ease);\n      var model = this._model;\n      var start = this._start;\n      var view = this._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        return r;\n      }\n\n      if (start.violin == null) {\n        return r; // model === view -> not copied\n      } // create deep copy to avoid alternation\n\n\n      if (model.violin === view.violin) {\n        view.violin = Chart.helpers.clone(view.violin);\n      }\n\n      transitionViolin(start.violin, view.violin, model.violin, ease);\n      return r;\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var violin = vm.violin;\n      var vert = this.isVertical();\n      ctx.save();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var coords = violin.coords;\n      Chart.canvasHelpers.drawPoint(ctx, 'rectRot', 5, vm.x, vm.y);\n      ctx.stroke();\n      ctx.beginPath();\n\n      if (vert) {\n        var x = vm.x;\n        var width = vm.width;\n        var factor = width / 2 / violin.maxEstimate;\n        ctx.moveTo(x, violin.min);\n        coords.forEach(function (_ref) {\n          var v = _ref.v,\n              estimate = _ref.estimate;\n          ctx.lineTo(x - estimate * factor, v);\n        });\n        ctx.lineTo(x, violin.max);\n        ctx.moveTo(x, violin.min);\n        coords.forEach(function (_ref2) {\n          var v = _ref2.v,\n              estimate = _ref2.estimate;\n          ctx.lineTo(x + estimate * factor, v);\n        });\n        ctx.lineTo(x, violin.max);\n      } else {\n        var y = vm.y;\n        var height = vm.height;\n\n        var _factor = height / 2 / violin.maxEstimate;\n\n        ctx.moveTo(violin.min, y);\n        coords.forEach(function (_ref3) {\n          var v = _ref3.v,\n              estimate = _ref3.estimate;\n          ctx.lineTo(v, y - estimate * _factor);\n        });\n        ctx.lineTo(violin.max, y);\n        ctx.moveTo(violin.min, y);\n        coords.forEach(function (_ref4) {\n          var v = _ref4.v,\n              estimate = _ref4.estimate;\n          ctx.lineTo(v, y + estimate * _factor);\n        });\n        ctx.lineTo(violin.max, y);\n      }\n\n      ctx.stroke();\n      ctx.fill();\n      ctx.closePath();\n\n      this._drawOutliers(vm, violin, ctx, vert);\n\n      ctx.restore();\n\n      this._drawItems(vm, violin, ctx, vert);\n    },\n    _getBounds: function _getBounds() {\n      var vm = this._view;\n      var vert = this.isVertical();\n      var violin = vm.violin;\n\n      if (vert) {\n        var x = vm.x,\n            width = vm.width;\n        var x0 = x - width / 2;\n        return {\n          left: x0,\n          top: violin.max,\n          right: x0 + width,\n          bottom: violin.min\n        };\n      }\n\n      var y = vm.y,\n          height = vm.height;\n      var y0 = y - height / 2;\n      return {\n        left: violin.min,\n        top: y0,\n        right: violin.max,\n        bottom: y0 + height\n      };\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - Math.min(vm.violin.min, vm.violin.max);\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      var iqr = Math.abs(vm.violin.max - vm.violin.min);\n\n      if (this.isVertical()) {\n        return iqr * vm.width;\n      }\n\n      return iqr * vm.height;\n    },\n    _getOutliers: function _getOutliers() {\n      return this._view.violin.outliers || [];\n    }\n  });\n\n  var verticalDefaults = {\n    scales: {\n      yAxes: [{\n        type: 'arrayLinear'\n      }]\n    }\n  };\n  var horizontalDefaults = {\n    scales: {\n      xAxes: [{\n        type: 'arrayLinear'\n      }]\n    }\n  };\n  function toFixed(value) {\n    var decimals = this._chart.config.options.tooltipDecimals; // inject number of decimals from config\n\n    if (decimals == null || typeof decimals !== 'number' || decimals < 0) {\n      return value;\n    }\n\n    return Number.parseFloat(value).toFixed(decimals);\n  }\n  var configKeys = ['outlierRadius', 'itemRadius', 'itemStyle', 'itemBackgroundColor', 'itemBorderColor', 'outlierColor', 'medianColor', 'segmentColor', 'hitPadding', 'outlierHitRadius', 'lowerColor'];\n  var configKeyIsColor = [false, false, false, true, true, true, true, true, false, false, true];\n  var array = {\n    _elementOptions: function _elementOptions() {\n      return {};\n    },\n    updateElement: function updateElement(elem, index, reset) {\n      var dataset = this.getDataset();\n      var custom = elem.custom || {};\n\n      var options = this._elementOptions();\n\n      Chart.controllers.bar.prototype.updateElement.call(this, elem, index, reset);\n      var resolve = Chart.helpers.options.resolve; // Scriptable options\n\n      var context = {\n        chart: this.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: this.index\n      };\n      configKeys.forEach(function (item) {\n        elem._model[item] = resolve([custom[item], dataset[item], options[item]], context, index);\n      });\n    },\n    _calculateCommonModel: function _calculateCommonModel(r, data, container, scale) {\n      if (container.outliers) {\n        r.outliers = container.outliers.map(function (d) {\n          return scale.getPixelForValue(Number(d));\n        });\n      }\n\n      if (Array.isArray(data)) {\n        r.items = data.map(function (d) {\n          return scale.getPixelForValue(Number(d));\n        });\n      } else if (container.items) {\n        r.items = container.items.map(function (d) {\n          return scale.getPixelForValue(Number(d));\n        });\n      }\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      Chart.controllers.bar.prototype.setHoverStyle.call(this, element);\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = Chart.helpers.getHoverColor;\n      var resolve = Chart.helpers.options.resolve;\n      configKeys.forEach(function (item, i) {\n        element.$previousStyle[item] = model[item];\n        var hoverKey = \"hover\".concat(item.charAt(0).toUpperCase()).concat(item.slice(1));\n        var modelValue = configKeyIsColor[i] && model[item] != null ? getHoverColor(model[item]) : model[item];\n        element._model[item] = resolve([custom[hoverKey], dataset[hoverKey], modelValue], undefined, index);\n      });\n    }\n  };\n\n  function boxplotTooltip(item, data) {\n    var value = data.datasets[item.datasetIndex].data[item.index];\n\n    var options = this._chart.getDatasetMeta(item.datasetIndex).controller._getValueScale().options.ticks;\n\n    var b = asBoxPlotStats(value, options);\n    var hoveredOutlierIndex = this._tooltipOutlier == null ? -1 : this._tooltipOutlier;\n    var label = this._options.callbacks.boxplotLabel;\n\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return label.apply(this, [item, data, b, hoveredOutlierIndex].concat(args));\n  }\n\n  var defaults$1 = {\n    tooltips: {\n      position: 'boxplot',\n      callbacks: {\n        label: boxplotTooltip,\n        boxplotLabel: function boxplotLabel(item, data, b, hoveredOutlierIndex) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var label = \"\".concat(datasetLabel, \" \").concat(typeof item.xLabel === 'string' ? item.xLabel : item.yLabel);\n\n          if (!b) {\n            return \"\".concat(label, \" (NaN)\");\n          }\n\n          if (hoveredOutlierIndex >= 0) {\n            var outlier = b.outliers[hoveredOutlierIndex];\n            return \"\".concat(label, \" (outlier: \").concat(toFixed.call(this, outlier), \")\");\n          }\n\n          return \"\".concat(label, \" (min: \").concat(toFixed.call(this, b.min), \", q1: \").concat(toFixed.call(this, b.q1), \", median: \").concat(toFixed.call(this, b.median), \", q3: \").concat(toFixed.call(this, b.q3), \", max: \").concat(toFixed.call(this, b.max), \")\");\n        }\n      }\n    }\n  };\n  Chart.defaults.boxplot = Chart.helpers.merge({}, [Chart.defaults.bar, verticalDefaults, defaults$1]);\n  Chart.defaults.horizontalBoxplot = Chart.helpers.merge({}, [Chart.defaults.horizontalBar, horizontalDefaults, defaults$1]);\n\n  if (Chart.defaults.global.datasets && Chart.defaults.global.datasets.bar) {\n    Chart.defaults.global.datasets.boxplot = _objectSpread2({}, Chart.defaults.global.datasets.bar);\n  }\n\n  if (Chart.defaults.global.datasets && Chart.defaults.global.datasets.horizontalBar) {\n    Chart.defaults.global.datasets.horizontalBoxplot = _objectSpread2({}, Chart.defaults.global.datasets.horizontalBar);\n  }\n\n  var boxplot = _objectSpread2(_objectSpread2({}, array), {}, {\n    dataElementType: Chart.elements.BoxAndWhiskers,\n    _elementOptions: function _elementOptions() {\n      return this.chart.options.elements.boxandwhiskers;\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(elem, index, reset) {\n      var _Chart$controllers$ba;\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n        args[_key2 - 3] = arguments[_key2];\n      }\n\n      (_Chart$controllers$ba = Chart.controllers.bar.prototype._updateElementGeometry).call.apply(_Chart$controllers$ba, [this, elem, index, reset].concat(args));\n\n      elem._model.boxplot = this._calculateBoxPlotValuesPixels(this.index, index);\n    },\n\n    /**\n     * @private\n     */\n    _calculateBoxPlotValuesPixels: function _calculateBoxPlotValuesPixels(datasetIndex, index) {\n      var scale = this._getValueScale();\n\n      var data = this.chart.data.datasets[datasetIndex].data[index];\n\n      if (!data) {\n        return null;\n      }\n\n      var v = asBoxPlotStats(data, scale.options.ticks);\n      var r = {};\n      Object.keys(v).forEach(function (key) {\n        if (key !== 'outliers' && key !== 'items') {\n          r[key] = scale.getPixelForValue(Number(v[key]));\n        }\n      });\n\n      this._calculateCommonModel(r, data, v, scale);\n\n      return r;\n    }\n  });\n  /**\n   * This class is based off controller.bar.js from the upstream Chart.js library\n   */\n\n\n  var BoxPlot = Chart.controllers.boxplot = Chart.controllers.bar.extend(boxplot);\n  var HorizontalBoxPlot = Chart.controllers.horizontalBoxplot = Chart.controllers.horizontalBar.extend(boxplot);\n\n  function violinTooltip(item, data) {\n    var value = data.datasets[item.datasetIndex].data[item.index];\n\n    var options = this._chart.getDatasetMeta(item.datasetIndex).controller._getValueScale().options.ticks;\n\n    var v = asViolinStats(value, options);\n    var label = this._options.callbacks.violinLabel;\n\n    for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n      args[_key - 2] = arguments[_key];\n    }\n\n    return label.apply(this, [item, data, v].concat(args));\n  }\n\n  var defaults$2 = {\n    tooltips: {\n      callbacks: {\n        label: violinTooltip,\n        violinLabel: function violinLabel(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var value = item.value;\n          var label = \"\".concat(datasetLabel, \" \").concat(typeof item.xLabel === 'string' ? item.xLabel : item.yLabel);\n          return \"\".concat(label, \" (\").concat(toFixed.call(this, value), \")\");\n        }\n      }\n    }\n  };\n  Chart.defaults.violin = Chart.helpers.merge({}, [Chart.defaults.bar, verticalDefaults, defaults$2]);\n  Chart.defaults.horizontalViolin = Chart.helpers.merge({}, [Chart.defaults.horizontalBar, horizontalDefaults, defaults$2]);\n\n  if (Chart.defaults.global.datasets && Chart.defaults.global.datasets.bar) {\n    Chart.defaults.global.datasets.violin = _objectSpread2({}, Chart.defaults.global.datasets.bar);\n  }\n\n  if (Chart.defaults.global.datasets && Chart.defaults.global.datasets.horizontalBar) {\n    Chart.defaults.global.datasets.horizontalViolin = _objectSpread2({}, Chart.defaults.global.datasets.horizontalBar);\n  }\n\n  var controller = _objectSpread2(_objectSpread2({}, array), {}, {\n    dataElementType: Chart.elements.Violin,\n    _elementOptions: function _elementOptions() {\n      return this.chart.options.elements.violin;\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(elem, index, reset) {\n      var _Chart$controllers$ba;\n\n      for (var _len2 = arguments.length, args = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n        args[_key2 - 3] = arguments[_key2];\n      }\n\n      (_Chart$controllers$ba = Chart.controllers.bar.prototype._updateElementGeometry).call.apply(_Chart$controllers$ba, [this, elem, index, reset].concat(args));\n\n      var custom = elem.custom || {};\n\n      var options = this._elementOptions();\n\n      elem._model.violin = this._calculateViolinValuesPixels(this.index, index, custom.points !== undefined ? custom.points : options.points);\n    },\n\n    /**\n     * @private\n     */\n    _calculateViolinValuesPixels: function _calculateViolinValuesPixels(datasetIndex, index, points) {\n      var scale = this._getValueScale();\n\n      var data = this.chart.data.datasets[datasetIndex].data[index];\n      var violin = asViolinStats(data, scale.options.ticks);\n\n      if (!Array.isArray(data) && typeof data === 'number' && !Number.isNaN || violin == null) {\n        return {\n          min: data,\n          max: data,\n          median: data,\n          coords: [{\n            v: data,\n            estimate: Number.NEGATIVE_INFINITY\n          }],\n          maxEstimate: Number.NEGATIVE_INFINITY\n        };\n      }\n\n      var range = violin.max - violin.min;\n      var samples = [];\n      var inc = range / points;\n\n      for (var v = violin.min; v <= violin.max && inc > 0; v += inc) {\n        samples.push(v);\n      }\n\n      if (samples[samples.length - 1] !== violin.max) {\n        samples.push(violin.max);\n      }\n\n      var coords = violin.coords || violin.kde(samples).map(function (v) {\n        return {\n          v: v[0],\n          estimate: v[1]\n        };\n      });\n      var r = {\n        min: scale.getPixelForValue(violin.min),\n        max: scale.getPixelForValue(violin.max),\n        median: scale.getPixelForValue(violin.median),\n        coords: coords.map(function (_ref) {\n          var v = _ref.v,\n              estimate = _ref.estimate;\n          return {\n            v: scale.getPixelForValue(v),\n            estimate: estimate\n          };\n        }),\n        maxEstimate: coords.reduce(function (a, d) {\n          return Math.max(a, d.estimate);\n        }, Number.NEGATIVE_INFINITY)\n      };\n\n      this._calculateCommonModel(r, data, violin, scale);\n\n      return r;\n    }\n  });\n  /**\n   * This class is based off controller.bar.js from the upstream Chart.js library\n   */\n\n\n  var Violin$1 = Chart.controllers.violin = Chart.controllers.bar.extend(controller);\n  var HorizontalViolin = Chart.controllers.horizontalViolin = Chart.controllers.horizontalBar.extend(controller);\n\n  var helpers = Chart.helpers;\n  var ArrayLinearScaleOptions = helpers.merge({}, [commonScaleOptions, Chart.scaleService.getScaleDefaults('linear')]);\n  var ArrayLinearScale = Chart.scaleService.getScaleConstructor('linear').extend({\n    getRightValue: function getRightValue$1(rawValue) {\n      return Chart.LinearScaleBase.prototype.getRightValue.call(this, getRightValue(rawValue, this.options.ticks));\n    },\n    _parseValue: function _parseValue(rawValue) {\n      return Chart.LinearScaleBase.prototype._parseValue.call(this, getRightValue(rawValue, this.options.ticks));\n    },\n    determineDataLimits: function determineDataLimits() {\n      commonDataLimits.call(this); // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    }\n  });\n  Chart.scaleService.registerScaleType('arrayLinear', ArrayLinearScale, ArrayLinearScaleOptions);\n\n  var helpers$1 = Chart.helpers;\n  var ArrayLogarithmicScaleOptions = helpers$1.merge({}, [commonScaleOptions, Chart.scaleService.getScaleDefaults('logarithmic')]);\n  var ArrayLogarithmicScale = Chart.scaleService.getScaleConstructor('logarithmic').extend({\n    getRightValue: function getRightValue$1(rawValue) {\n      return Chart.LinearScaleBase.prototype.getRightValue.call(this, getRightValue(rawValue, this.options.ticks));\n    },\n    _parseValue: function _parseValue(rawValue) {\n      return Chart.LinearScaleBase.prototype._parseValue.call(this, getRightValue(rawValue, this.options.ticks));\n    },\n    determineDataLimits: function determineDataLimits() {\n      var _this = this;\n\n      // Add whitespace around bars. Axis shouldn't go exactly from min to max\n      var tickOpts = this.options.ticks;\n      this.minNotZero = null;\n      commonDataLimits.call(this, function (boxPlot) {\n        var value = boxPlot[tickOpts.minStats];\n\n        if (value !== 0 && (_this.minNotZero === null || value < _this.minNotZero)) {\n          _this.minNotZero = value;\n        }\n      });\n      this.min = helpers$1.valueOrDefault(tickOpts.min, this.min - this.min * 0.05);\n      this.max = helpers$1.valueOrDefault(tickOpts.max, this.max + this.max * 0.05);\n\n      if (this.min === this.max) {\n        if (this.min !== 0 && this.min !== null) {\n          this.min = Math.pow(10, Math.floor(helpers$1.log10(this.min)) - 1);\n          this.max = Math.pow(10, Math.floor(helpers$1.log10(this.max)) + 1);\n        } else {\n          this.min = 1;\n          this.max = 10;\n        }\n      }\n    }\n  });\n  Chart.scaleService.registerScaleType('arrayLogarithmic', ArrayLogarithmicScale, ArrayLogarithmicScaleOptions);\n\n  function boxplotPositioner(elements, eventPosition) {\n    var _this = this;\n\n    if (!elements.length) {\n      return false;\n    }\n\n    var _elements$reduce = elements.reduce(function (_ref, el) {\n      var _ref2 = _slicedToArray(_ref, 3),\n          xi = _ref2[0],\n          ci = _ref2[1],\n          counti = _ref2[2];\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition(eventPosition, _this);\n        return [xi + pos.x, ci + pos.y, counti + 1];\n      }\n\n      return [xi, ci, counti];\n    }, [0, 0, 0]),\n        _elements$reduce2 = _slicedToArray(_elements$reduce, 3),\n        x = _elements$reduce2[0],\n        y = _elements$reduce2[1],\n        count = _elements$reduce2[2];\n\n    return {\n      x: x / count,\n      y: y / count\n    };\n  }\n  Chart.Tooltip.positioners.boxplot = boxplotPositioner;\n\n  exports.ArrayLinearScale = ArrayLinearScale;\n  exports.ArrayLogarithmicScale = ArrayLogarithmicScale;\n  exports.BoxAndWhiskers = BoxAndWiskers;\n  exports.BoxPlot = BoxPlot;\n  exports.HorizontalBoxPlot = HorizontalBoxPlot;\n  exports.HorizontalViolin = HorizontalViolin;\n  exports.Violin = Violin;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"],
  "mappings": "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",
  "names": ["exports", "quantiles", "kde", "i", "compute", "boxplot", "iqr", "matchID", "v"]
}
